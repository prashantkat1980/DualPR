name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - hotfix*
      - devl

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

  cd:
    name: Continuous Deployment
    needs: ci
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t your-docker-registry/admin-service:latest .
          docker push your-docker-registry/admin-service:latest
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Approval from Prashant
        if: github.actor == 'prashant'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pullRequest } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            if (pullRequest.state === 'open') {
              await github.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                event: 'APPROVE',
                body: 'Ready for deployment.'
              });
            }

      - name: Approval from Abhishek
        if: github.actor == 'abhishek'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pullRequest } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            if (pullRequest.state === 'open') {
              await github.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                event: 'APPROVE',
                body: 'Ready for deployment.'
              });
            }

      - name: Deploy to ECS
        if: github.actor == 'prashant' && github.actor == 'abhishek'
        run: echo "Deploying to ECS..." # Add your deployment commands here

